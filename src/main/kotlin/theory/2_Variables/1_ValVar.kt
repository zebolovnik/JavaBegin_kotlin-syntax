package theory.`2_Variables`

/*

"Объявление переменных и констант"

var - переменная (mutable)
    - значение можно присваивать любое кол-во раз
    - runtime value - значение можно присваивать во время работы приложения

val - константа (immutable, read only)
    - значение можно присвоить только один раз
    - runtime value - присваивается во время работы приложения (можно присвоить не просто какое-то значение, а результат работы функции и пр.)
    - аналог final из Java



Понятия:
- runtime value: значение можно присваивать во время работы приложения
- compile value: значение нужно присвоить сразу до запуска проекта (нельзя присвоить результат функции, другие переменные)

Можно объявлять на уровне класса, метода, файла

В отличие от некоторых других языков - в Kotlin можно объявлять переменные/константы одного имени в классе и в методе одновременно (не будет ошибки компиляции)


Обратите внимание, что мы объявляем переменные/константы и функции просто в файле .kt (не внутри какого либо класса как в Java) - это отличается от Java подобных языков, где мы не можем создавать ничего вне класса

В Kotlin различают (при создании функций, переменных, констант и пр.):
- top-level: объявление на уровне файла (вне какого-либо класса) - привязка к файлу
- class-level: объявление внутри класса (подробности - далее в уроках) - привязка к классу


Правила именования (как и в любом другом языке):
- названия переменной должно быть со смыслом, для чего создавали
- название переменной с маленькой буквы, формат CamelCase (каждое новое слово - с большой буквы и без подчеркивания)
- не рекомендуется давать переменным слишком длинные и сложные имена - максимум из 2-3 слов в формате CamelCase



 */



// var
var textVar: String = "var value"  // явное указание типа и значения
var digitVar = 1  // явное указание значения (тип автоматически становится Int - нажмите над переменной "Alt + колесо мыши" и увидите тип)
//var notInitVar: Int // ошибка: значение не инициализировано


// val
val textVal = "val value" // тип автоматически становится String. Нельзя присвоить новое значение, т.к. это константа
val digitVal = 2 // явное указание значения (тип автоматически становится Int - нажмите над переменной "Alt + колесо мыши" и увидите тип)
//val nonInitVal: String // ошибка: значение не инициализировано


val valFromFunc = testValue()

fun testValue() = 10 // тестовая функция


// правой кнопкой -> Run
// можете комментировать определенные строки функции и заново запускать проект, чтобы не запутаться при выводе результатов
fun main() {

    print(digitVar + digitVal); // сумма 2 значений

    println("testVal = $valFromFunc")

    println("value = $textVal") // подстановка значения переменной/константы в текст (не нужны лишние конкатенации, доп. кавычки и пр.)
    println("length = ${textVar.length}") // если выражение сложное - нужно добавлять фигурные скобки, внутри можно вызывать любые операторы или функции - результат будет подставляться в конечный текст

}
